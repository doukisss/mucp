<?php
//24.0.30.0 IHM/Champ/Selecteur.php GF
//VersionVI: 01F240077f
//(c) 2005-2012 PC SOFT - Release
 if (!defined('__INC__IHM/Champ/Champ.php')) { define('__INC__IHM/Champ/Champ.php',true); include_once(WB_INCLUDE_PATH.'WD7c939e6867492a5e5416bd4b4327fac0.php'); } if (!defined('__INC__IHM/Champ/Interrupteur.php')) { define('__INC__IHM/Champ/Interrupteur.php',true); include_once(WB_INCLUDE_PATH.'WD572e69a9a5e7a3dfec9154bf07f8b8b7.php'); } class CSelecteur extends CInterrupteurSelecteurCommun { function CSelecteur() { parent::CInterrupteurSelecteurCommun(); $this->Valeur = 1; $this->ValeurInitiale = 1; } function Fdc05d49f( $ValeurHTTP ) { $this->SetValeur($ValeurHTTP); } function SetValeur($NewVal) { if(($NewVal > 0 && $NewVal <= $this->Occurrence) || $NewVal == -1) { parent::SetValeur($NewVal); } } function& GetValI( $nIndice ) { $RetourDefaut = false; if ( ($nIndice < 1) || ($nIndice > $this->Occurrence) ) return $RetourDefaut; $RetourDefaut = ( $this->IsChecked($nIndice)); return $RetourDefaut; } function SetValI( $nIndice, $Valeur) { if ($nIndice < 1) return; if ($nIndice > $this->Occurrence) return; if ( $this->Valeur == $nIndice ) { if (!VersBooleen($Valeur)) $this->Valeur = -1; } else { if (VersBooleen($Valeur)) $this->Valeur = $nIndice; } if(Feef890d7()) { F694db118($this->m_sNomPHP); } } function F16d5955d() { return $this->Fab76a847( $this->Valeur ) - 1; } function IsChecked( $Indice ) { return $this->Valeur == $Indice; } function& GetOccurrence() { $nOccurrence = $this->Occurrence; return $nOccurrence; } function& GetType() { return getRef(6); } function F4a917fa4() { return 6; } } class CInterrupteurBascule extends CSelecteur { var $TabOptions = array(); function CInterrupteurBascule() { parent::CSelecteur(); } function& GetType() { return getRef(ID_INTERRUPTEUR_BASCULE); } function F4a917fa4() { return ID_INTERRUPTEUR_BASCULE; } function Fdc05d49f( $ValeurHTTP ) { $this->Valeur = $ValeurHTTP; } function& GetValeur() { if (isset($this->TabOptions) && isset($this->TabOptions[$this->Valeur-1])) return $this->TabOptions[$this->Valeur-1]->Valeur; return $this->Valeur ; } function SetValeur($NewVal) { $i=-1; while(isset($this->TabOptions) && isset($this->TabOptions[++$i])) { if ($this->TabOptions[$i]->Valeur == $NewVal) { parent::SetValeur($i+1); return; } } parent::SetValeur($NewVal); } function& GetValI( $nIndice ) { $nIndice = VersPrimitif($nIndice); if (isset($this->TabOptions) && isset($this->TabOptions[$nIndice-1])) return $this->TabOptions[$nIndice-1]->Valeur; return parent::GetValI($nIndice); } function SetValI( $nIndice, $Valeur) { $i=-1; while(isset($this->TabOptions) && isset($this->TabOptions[++$i])) { if ($this->TabOptions[$i]->Valeur == $NewVal) { if ($this->Valeur == $i) { if (!VersBooleen($Valeur)) $this->Valeur = -1; } else { if (VersBooleen($Valeur)) $this->Valeur = $i; } if(Feef890d7()) { F694db118($this->m_sNomPHP); } return; } } return parent::SetValI($nIndice,$Valeur); } function F16d5955d() { return $this->Valeur - 1; } } ?>